// Package swagger Code generated by swaggo/swag. DO NOT EDIT
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/courses": {
            "get": {
                "description": "Get a list of all courses, with optional search and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Search the catalog of UVic courses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search courses by department code prefix (e.g., 'CSC' returns CSC110, CSC111, CSC320, etc.)",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number for pagination (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Number of results per page (default: 20)",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "500": {
                        "description": "Course not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/courses/info": {
            "get": {
                "description": "Get general information about available courses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Get course information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Program ID (in uppercase)",
                        "name": "pid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Course code (in uppercase)",
                        "name": "course",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with course information",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Course not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error when neither pid nor course is provided",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/courses/sections/{term}/{course}": {
            "get": {
                "description": "Get sections for a specific course in a specific term",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Get course sections",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Term ID (e.g., 202101)",
                        "name": "term",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Course ID (e.g., CSC110)",
                        "name": "course",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with sections data or empty array if no sections found",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Error when sections count is invalid",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/outline/{term}/{course}": {
            "get": {
                "description": "Get the outline for a specific course in a specific term",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Get course outline",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Term ID",
                        "name": "term",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "course",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Include unpublished outlines if true",
                        "name": "unpublished",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with outline link and validity",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "isValid": {
                                    "type": "boolean"
                                },
                                "link": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error when fetching outline",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "coursesystem.app",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Course API",
	Description:      "API for accessing course information",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
